/**/ P=68000; SC=2000; /**//*+T*//*+M*/ /*/ MODULE (TB); /*//**/ MODULE  TB; /**/SYSTEM; /**/ GD_console:    A1;                     /**/ /*/  GD_console:    CON;                    /*/PROBLEM;                      /***** Spezifikationen fuer RTOS-PEARL */                      /**/ SPC GD_console DATION INOUT ALPHIC CONTROL(ALL);/**/ /**/ SPC (WRITE)    ENTRY(DATION INOUT ALPHIC CONTROL(ALL),                           FIXED IDENT) GLOBAL;/**/ /**/ SPC (READ)     ENTRY(DATION INOUT ALPHIC CONTROL(ALL),                           FIXED IDENT) GLOBAL;/**/ /**/ SPC (TASTA,               TASTB,               TASTC)    DATION IN ALPHIC CONTROL(ALL) GLOBAL;/**/ /**/ SPC DATE       ENTRY RETURNS(CHAR(10)) GLOBAL;/**/                      /***** Spezifikationen fuer WERUM-PEARL */                      /*/ SPC SETPIX      ENTRY (INV FIXED,INV FIXED,                            INV FIXED) GLOBAL; /*/ /*/ SPC GETPIX      ENTRY (INV FIXED,INV FIXED)                           RETURNS(FIXED) GLOBAL;/*/ /*/ SPC LINE        ENTRY (INV FIXED,INV FIXED,                            INV FIXED,INV FIXED,                            INV FIXED) GLOBAL;/*/ /*/ SPC NOW         ENTRY RETURNS(CLOCK) GLOBAL;/*/ /*/ SPC DATE        ENTRY RETURNS(CHAR(8)) GLOBAL;/*/ /*/ SPC ST          ENTRY (DATION INOUT ALPHIC CONTROL(ALL)                             IDENT) RETURNS(FIXED) GLOBAL;/*/ /*/ SPC REWIND      ENTRY (DATION INOUT ALPHIC CONTROL(ALL)                             IDENT) GLOBAL;/*/ /*/ SPC SYNC        ENTRY (DATION INOUT ALPHIC CONTROL(ALL)                             IDENT) GLOBAL;/*/ /*/ SPC SEEK        ENTRY (DATION INOUT ALPHIC CONTROL(ALL)                             IDENT,FIXED(31)) GLOBAL;/*/ /*/ SPC SAVEP       ENTRY (DATION INOUT ALPHIC CONTROL(ALL)                             IDENT,FIXED(31)) GLOBAL;/*/ /*/ SPC APPEND      ENTRY (DATION INOUT ALPHIC CONTROL(ALL)                             IDENT) GLOBAL;/*/ /*/ SPC REFADD      ENTRY (REF FIXED,FIXED(31)) GLOBAL;/*/  /***** Spezifikationen fuer WERUM-PEARL und RTOS-PEARL */  SPC CLEAR           ENTRY GLOBAL; SPC (SCLOAD,SCSAVE) ENTRY (INV CHAR(5),INV FIXED,                            INV CHAR(24)) GLOBAL; SPC (SCRSET,SCKILL,      SCRCHG)        ENTRY (INV CHAR(5)) GLOBAL; SPC PLANE           ENTRY (INV FIXED,INV FIXED) GLOBAL; SPC WIDTH           ENTRY (FIXED IDENT,FIXED IDENT) GLOBAL; SPC PEN             ENTRY (INV FIXED) GLOBAL; SPC SPRITL          ENTRY (INV FIXED,INV FIXED,                            INV FIXED,INV FIXED,                            INV CHAR(5),                            (,) BIT(16) IDENT) GLOBAL; SPC SPRITS          ENTRY (INV FIXED,INV FIXED,                            INV FIXED,INV FIXED,                            INV CHAR(5),                            (,) INV BIT(16) IDENT) GLOBAL; SPC CIRCLE          ENTRY (INV FIXED,INV FIXED,                            INV FIXED,INV FIXED)                           GLOBAL; SPC TEXT            ENTRY (INV FIXED,INV FIXED,                            INV FIXED,INV CHAR(80)) GLOBAL;                              SPC TASKST          ENTRY(INV CHAR(24)) RETURNS (BIT(32)) GLOBAL; SPC ASSIGN          ENTRY(DATION INOUT ALPHIC CONTROL(ALL) IDENT,                           INV CHAR(24)) GLOBAL; SPC CURPOS          ENTRY(CHAR(1) IDENT,CHAR(1) IDENT) GLOBAL; SPC RANF            ENTRY(FIXED(31) IDENT, FIXED(31) IDENT)                           RETURNS (FLOAT(23)) GLOBAL; SPC DRANF           ENTRY(FIXED(31) IDENT, FIXED(31) IDENT)                           RETURNS (FLOAT(53)) GLOBAL; SPC (TOIEES,TORTOS) ENTRY(INV FLOAT(23)) RETURNS(FLOAT(23))                           GLOBAL; /*V2.1*/ SPC (TOIEED,TORTOD) ENTRY(INV FLOAT(53)) RETURNS(FLOAT(53))                           GLOBAL; /* V2.1 */ SPC IDF_DATION      ENTRY(DATION INOUT ALPHIC CONTROL(ALL) IDENT,                           CHAR(128),BIT(16) IDENT,FIXED IDENT,                           FIXED IDENT,FIXED IDENT) GLOBAL;/* V2.2 */ SPC SET_DATION      ENTRY(DATION INOUT ALPHIC CONTROL(ALL) IDENT,                           INV CHAR(128)) GLOBAL; /* V2.2 */ SPC GET_DEVICE      ENTRY(INV FIXED,INV FIXED)                          RETURNS(CHAR(24)) GLOBAL;/* V2.2*/ SPC GET_USER        ENTRY RETURNS(FIXED) GLOBAL; /* V2.2 */ SPC GET_TASKNAME    ENTRY RETURNS(CHAR(24)) GLOBAL; /* V2.2 */ SPC (GET_WORKDIR,      GET_EXECDIR)   ENTRY RETURNS(CHAR(128)) GLOBAL; /* V2.2 */ SPC (GET_WORKPATH,      GET_EXECPATH)  ENTRY(FIXED IDENT,FIXED IDENT)                          RETURNS(CHAR(128)) GLOBAL; /* V2.2 */ SPC CMD_EXW         ENTRY(INV CHAR(80))                          RETURNS(BIT(1)) GLOBAL; /* V2.2 */ SPC Litest          ENTRY(INV CHAR(8) IDENT)                          RETURNS(BIT(1)) GLOBAL;/* V2.2 */ /* nachzuladene Einbaufunktionen: */ SPC AFORM           ENTRY(INV CHAR(255),INV CHAR(1),INV FIXED)                          RETURNS (CHAR(255)) GLOBAL; SPC MID             ENTRY(INV CHAR(255),INV FIXED,INV FIXED)                          RETURNS (CHAR(255)) GLOBAL; SPC (BEG,LEN)       ENTRY(INV CHAR(255)) RETURNS(FIXED) GLOBAL; SPC (INSER,KON)     ENTRY(INV CHAR(255), INV FIXED, INV FIXED,                           INV CHAR(255), INV FIXED, INV FIXED)                          RETURNS(CHAR(255)) GLOBAL; SPC INSTR           ENTRY(INV CHAR(255),INV FIXED,                           INV FIXED, INV CHAR(255), INV FIXED,                           INV FIXED) RETURNS(FIXED) GLOBAL; SPC (IMBS,ITBS)     ENTRY(INV CHAR(26)) RETURNS (FIXED(31)) GLOBAL; SPC (COFF,CON)      ENTRY GLOBAL; SPC (CURSET,CURSOR) ENTRY(FIXED IDENT,FIXED IDENT) GLOBAL; SPC TIME            ENTRY RETURNS(CHAR(8)) GLOBAL; SPC BASICA          ENTRY GLOBAL;  BASIC: TASK; CALL ASSIGN (GD_console,'TY'); OPEN GD_console; PUT 'TINY BASIC LOADER' TO GD_console BY A,SKIP; /*+P*/ CALL BASICA; PUT 'END OF TINY BASIC' TO GD_console BY A,SKIP; /*-P*/ CLOSE GD_console;END; /* TASK */MODEND;